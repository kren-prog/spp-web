{"version":3,"file":"static/js/752.ad7a7bcc.chunk.js","mappings":"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","sources":["Components/TiposYClasificacion/TiposForm.js","Components/TiposYClasificacion/TiposTable.js","Pages/Maestros/Configuracion/TiposYClasificacion.js"],"sourcesContent":["import { BookmarkStarFill } from 'react-bootstrap-icons';\r\nimport { Form, Row, Col, Button, FloatingLabel } from 'react-bootstrap';\r\n\r\nfunction TiposForm() {\r\n  \r\n  return (\r\n    <Form>\r\n      <Row>\r\n        <Form.Group as={Col} controlId=\"codigo\">\r\n          <Form.Label>Codigo</Form.Label>\r\n          <Form.Control type=\"number\" className='w-25' />\r\n        </Form.Group>\r\n      </Row>\r\n      <Row>\r\n        <Form.Group as={Col} controlId=\"tipoCadena\">\r\n          <Form.Label>Tipo cadena</Form.Label>\r\n          <Form.Control type=\"text\" />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"tipoEntero\">\r\n          <Form.Label>Tipo entero</Form.Label>\r\n          <Form.Control type=\"number\" />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"secuencia\">\r\n          <Form.Label>Secuencia</Form.Label>\r\n          <Form.Control type=\"number\" />\r\n        </Form.Group>\r\n      </Row>\r\n      <Row>\r\n        <Form.Group as={Col} controlId=\"an1\">\r\n          <Form.Label>Atributo N1</Form.Label>\r\n          <Form.Control type=\"number\" />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"an2\">\r\n          <Form.Label>Atributo N2</Form.Label>\r\n          <Form.Control type=\"number\" />\r\n        </Form.Group> <Form.Group as={Col} controlId=\"an3\">\r\n          <Form.Label>Atributo N3</Form.Label>\r\n          <Form.Control type=\"number\" />\r\n        </Form.Group> <Form.Group as={Col} controlId=\"an4\">\r\n          <Form.Label>Atributo N4</Form.Label>\r\n          <Form.Control type=\"number\" />\r\n        </Form.Group>\r\n      </Row>\r\n      <Row>\r\n        <Form.Group as={Col} controlId=\"ac1\">\r\n          <Form.Label>Atributo C1</Form.Label>\r\n          <Form.Control type=\"text\" />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"ac2\">\r\n          <Form.Label>Atributo C2</Form.Label>\r\n          <Form.Control type=\"text\" />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"ac3\">\r\n          <Form.Label>Atributo C3</Form.Label>\r\n          <Form.Control type=\"text\" />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"ac4\">\r\n          <Form.Label>Atributo C4</Form.Label>\r\n          <Form.Control type=\"text\" />\r\n        </Form.Group>\r\n      </Row>\r\n\r\n      <div className='text-center'>\r\n        <Button variant=\"success\" className='btn btn-sm m-2 fw-bold'>\r\n          Guardar <BookmarkStarFill color=\"white\" size={18} title=\"Save\" />\r\n        </Button>\r\n      </div>\r\n\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default TiposForm;","import React from 'react';\r\nimport { Table, Row } from 'react-bootstrap';\r\nimport { Pencil } from 'react-bootstrap-icons';\r\nimport SweetAlert from '../SweetAlert';\r\nimport { useForm } from '../../App/useForm';\r\nimport TiposForm from './TiposForm';\r\nimport BasicModal from '../BasicModal';\r\nimport BasicPaginate from '../BasicPaginate';\r\nimport SearchBar from '../SearchBar';\r\nimport ItemsPerPage from '../ItemsPerPage';\r\n\r\nfunction TableTipos() {\r\n\r\n    const { show, handleClose, handleShow, searchTerm, handleSearch, numberOfRows, itemsPerPage, handleChangeItems, alertResponse, handleAlertResponse } = useForm();\r\n\r\n    const [currentPage, setCurrentPage] = React.useState(0);\r\n\r\n    function handlePageClick({ selected: selectedPage }) {\r\n        setCurrentPage(selectedPage);\r\n    }\r\n\r\n    const data = Array.from({ length: 40 }, (_, index) => ({\r\n        code: index + 1,\r\n        tc: `cadena ${index + 1}`,\r\n        te: index,\r\n        description: `description${index} description${index + 1} `,\r\n        sequence: index,\r\n        n1: index,\r\n        n2: index,\r\n        n3: index,\r\n        n4: index,\r\n        c1: index,\r\n        c2: index,\r\n        c3: index,\r\n        c4: index\r\n    }));\r\n\r\n    const totalPages = Math.ceil(data.length / itemsPerPage); // data.length\r\n\r\n    const startIndex = currentPage * itemsPerPage;\r\n    const endIndex = startIndex + itemsPerPage;\r\n\r\n    // Filtrar los datos basados en el término de búsqueda en cualquier campo\r\n    const filteredData = data.filter((item) =>\r\n        Object.values(item).some(\r\n            (value) =>\r\n                typeof value === 'string' &&\r\n                value.toLowerCase().includes(searchTerm.toLowerCase())\r\n        )\r\n    );\r\n\r\n    const currentData = filteredData.slice(startIndex, endIndex);\r\n\r\n    // filtrar por un campo en especifico\r\n    const filteredData2 = currentData.filter((item) =>\r\n        item.tc.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <SearchBar searchTerm={searchTerm} handleSearch={handleSearch} />\r\n\r\n                <ItemsPerPage handleChangeItems={handleChangeItems} numberOfRows={numberOfRows} />\r\n            </Row>\r\n\r\n            <Table striped bordered hover responsive size=\"sm\" className='table-condensed'>\r\n\r\n                <thead>\r\n                    <tr>\r\n                        <th> Codigo</th>\r\n                        <th>Tipo cadena</th>\r\n                        <th>Tipo entero</th>\r\n                        <th>Descripcion</th>\r\n                        <th>Secuencia</th>\r\n                        <th>Atributo N1</th>\r\n                        <th>Atributo N2</th>\r\n                        <th>Atributo N3</th>\r\n                        <th>Atributo N4</th>\r\n                        <th>Atributo C1</th>\r\n                        <th>Atributo C2</th>\r\n                        <th>Atributo C3</th>\r\n                        <th>Atributo C4</th>\r\n                        <th className=\"fixed-column\">Acciones</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {currentData.map((item) => (\r\n                        <tr key={item.code}>\r\n                            <td>{item.code}</td>\r\n                            <td>{item.tc}</td>\r\n                            <td className='text-center'>{item.te}</td>\r\n                            <td>{item.description}</td>\r\n                            <td className='text-center'>{item.sequence}</td>\r\n                            <td className='text-center'>{item.n1}</td>\r\n                            <td className='text-center'>{item.n2}</td>\r\n                            <td className='text-center'>{item.n3}</td>\r\n                            <td className='text-center'>{item.n4}</td>\r\n                            <td className='text-center'>{item.c1}</td> \r\n                            <td className='text-center'>{item.c2}</td>\r\n                            <td className='text-center'>{item.c3}</td>\r\n                            <td className='text-center'>{item.c4}</td>\r\n                            <td className=\"fixed-column\">\r\n                                <div className=\"d-flex p-2\">\r\n                                    <span onClick={handleShow} style={{ cursor: 'pointer' }}>\r\n                                        <Pencil color=\"royalblue\" size={24} title=\"Editar\" />\r\n                                    </span>\r\n                                    {/* Aca tendria que enviar el id  */}\r\n                                    {\r\n                                        show && (\r\n                                            <BasicModal handleClose={handleClose} title={\"Editar\"}>\r\n                                                <TiposForm />\r\n                                            </BasicModal>\r\n                                        )}\r\n\r\n                                    <SweetAlert onAlertResponse={handleAlertResponse}\r\n                                        title=\"Esta seguro?\"\r\n                                        text=\"Se eliminara el item.\"\r\n                                        icon=\"warning\"\r\n                                        typebtn=\"delete\"\r\n                                    />\r\n                                     {/* <p> {alertResponse}</p> */}\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n\r\n                </tbody>\r\n            </Table>\r\n            <div className='d-flex justify-content-center'>\r\n                <BasicPaginate totalPages={totalPages} handlePageClick={handlePageClick} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TableTipos;","import React from 'react'\r\nimport TiposTable from \"../../../Components/TiposYClasificacion/TiposTable\";\r\nimport TiposForm from \"../../../Components/TiposYClasificacion/TiposForm\";\r\nimport BasicModal from '../../../Components/BasicModal';\r\nimport { Button , Container, Row, Col} from 'react-bootstrap';\r\nimport { useForm } from '../../../App/useForm';\r\nimport { PlusCircle } from 'react-bootstrap-icons';\r\n\r\nfunction TiposYClasificacion() {\r\n\r\n    const { show, handleClose, handleShow } = useForm();\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Button variant=\"warning\" className='btn btn-sm mb-2 fw-bold text-white' onClick={handleShow}>\r\n                    Añadir  <PlusCircle color=\"white\" size={18} title=\"Add\" />\r\n                </Button>\r\n                <Row>\r\n                    <Col>\r\n                        <TiposTable />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            {\r\n                show && (\r\n                    <BasicModal handleClose={handleClose} title={\"Agregar\"}>\r\n                        <TiposForm />\r\n                    </BasicModal>\r\n                )}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TiposYClasificacion;"],"names":["_jsxs","Form","children","_jsx","Row","Group","as","Col","controlId","Label","Control","type","className","Button","variant","BookmarkStarFill","color","size","title","_useForm","useForm","show","handleClose","handleShow","searchTerm","handleSearch","numberOfRows","itemsPerPage","handleChangeItems","handleAlertResponse","alertResponse","_React$useState","React","_React$useState2","_slicedToArray","currentPage","setCurrentPage","data","Array","from","length","_","index","code","tc","concat","te","description","sequence","n1","n2","n3","n4","c1","c2","c3","c4","totalPages","Math","ceil","startIndex","endIndex","currentData","filter","item","Object","values","some","value","toLowerCase","includes","slice","_Fragment","SearchBar","ItemsPerPage","Table","striped","bordered","hover","responsive","map","onClick","style","cursor","Pencil","BasicModal","TiposForm","SweetAlert","onAlertResponse","text","icon","typebtn","BasicPaginate","handlePageClick","_ref","selectedPage","selected","Container","PlusCircle","TiposTable"],"sourceRoot":""}